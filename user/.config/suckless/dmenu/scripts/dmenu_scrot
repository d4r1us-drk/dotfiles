#!/usr/bin/env bash

# ***This script was made by Clay Gomera (Drake)***
#  - Description: A simple screenshot/screencast dmenu script
#  - Dependencies: maim, splop, ffmpeg, dmenu, libnotify

## Screenshots Folder ##
mkdir -p "$MEDIA_DIR/Pictures/Screenshots"
cd "$MEDIA_DIR/Pictures/Screenshots" || exit 0

## Main menu choices ##
mcho1="Take an screenshot"
mcho2="Record the screen"
mchos="$mcho1\n$mcho2"

## Screenshot menu choices ##
scho1="󱣴 Entire screen"
scho2="󱎫 Entire screen with delay"
scho3="󱕻 Select area"
scho4="󰖯 Active window"
scho5="󱎘 Exit"
schos="$scho1\n$scho2\n$scho3\n$scho4\n$scho5"

## Screenshot submenu ##
sscho1="Copy to clipboard"
sscho2="Save to Media/Pictures/Screenshots"
sschos="$sscho1\n$sscho2"

## Screenshot delay choices ##
del1="󱑀 3 sec delay"
del2="󱑂 5 sec delay"
del3="󱑇 10 sec delay"
dels="$del1\n$del2\n$del3"

fsschos() {
  sschoice=$(echo -e "$sschos" | dmenu -i -l 2 -p "  What do you want to do with this screenshot?")
}

fdel() {
  del=$(echo -e "$dels" | dmenu -i -p " Select Delay")
}

shot_screen() {
  fsschos
  if [ "$sschoice" = "$sscho1" ]; then
    maim | xclip -selection clipboard -t image/png && notify-send "Screenshot saved to clipboard"
  elif [ "$sschoice" = "$sscho2" ]; then
    maim -f jpg $(date +%s).jpg && notify-send "Screenshot saved"
  else
    exit 0
  fi
}

shot_screen_delay() {
  fsschos
  if [ "$sschoice" = "$sscho1" ]; then
    fdel
    case $del in
      "$del1")
        sleep 3 && maim | xclip -selection clipboard -t image/png && notify-send "Screenshot saved to clipboard"
        ;;
      "$del2")
        sleep 5 && maim | xclip -selection clipboard -t image/png && notify-send "Screenshot saved to clipboard"
        ;;
      "$del3")
        sleep 10 && maim | xclip -selection clipboard -t image/png && notify-send  "Screenshot saved to clipboard"
    esac
  elif [ "$sschoice" = "$sscho2" ]; then
    fdel
    case $del in
      "$del1")
        sleep 3 && maim -f jpg $(date +%s).jpg && notify-send "Screenshot saved"
        ;;
      "$del2")
        sleep 5 && maim -f jpg $(date +%s).jpg && notify-send "Screenshot saved"
        ;;
      "$del3")
        sleep 10 && maim -f jpg $(date +%s).jpg && notify-send  "Screenshot saved"
    esac
  else
    exit 0
  fi
}

shot_area() {
  fsschos
  if [ "$sschoice" = "$sscho1" ]; then
    maim -s | xclip -selection clipboard -t image/png && notify-send "Screenshot saved"
  elif [ "$sschoice" = "$sscho2" ]; then
    maim -s -f jpg $(date +%s).jpg && notify-send "Screenshot saved"
  else
    exit 0
  fi
}

shot_window() {
  fsschos
  if [ "$sschoice" = "$sscho1" ]; then
    maim -i $(xdotool getactivewindow) | xclip -selection clipboard -t image/png && notify-send "Screenshot saved"
  elif [ "$sschoice" = "$sscho2" ]; then
    maim -i $(xdotool getactivewindow) -f jpg $(date +%s).jpg && notify-send "Screenshot saved"
  else
    exit 0
  fi
}

## Main action ##
mchoice=$(echo -e "$mchos" | dmenu -i -l 2 -p "  Screen Capture Menu")
case $mchoice in
  "$mcho1")
    schoice=$(echo -e "$schos" | dmenu -i -l 9 -p "  Sreenshot Menu")
    case $schoice in
      "$scho1")
        shot_screen
        ;;
      "$scho2")
        shot_screen_delay
        ;;
      "$scho3")
        shot_area
        ;;
      "$scho4")
        shot_window
        ;;
      "$scho5")
        exit 0
    esac
    ;;
  "$mcho2")
    notify-send "It worked"
    exit 0
    ;;
esac

From a0bc203213e2359f6717e269081a346666279d8d Mon Sep 17 00:00:00 2001
From: Palanix <palanixyt@gmail.com>
Date: Sat, 26 Mar 2022 14:24:54 +0100
Subject: [PATCH] Implement an extra color for floating clients

---
 config.def.h |  1 +
 dwl.c        | 18 +++++++++++++++---
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/config.def.h b/config.def.h
index 447ba0051..6a79241bc 100644
--- a/config.def.h
+++ b/config.def.h
@@ -3,6 +3,7 @@ static const int sloppyfocus               = 1;  /* focus follows mouse */
 static const int bypass_surface_visibility = 0;  /* 1 means idle inhibitors will disable idle tracking even if it's surface isn't visible  */
 static const unsigned int borderpx         = 1;  /* border pixel of windows */
 static const float bordercolor[]           = {0.5, 0.5, 0.5, 1.0};
+static const float floatcolor[]		= {1.0, 0.0, 0.0, 0.0};
 static const float focuscolor[]            = {1.0, 0.0, 0.0, 1.0};
 /* To conform the xdg-protocol, set the alpha to zero to restore the old behavior */
 static const float fullscreen_bg[]         = {0.1, 0.1, 0.1, 1.0};
diff --git a/dwl.c b/dwl.c
index b5e146d10..78f252eb5 100644
--- a/dwl.c
+++ b/dwl.c
@@ -613,6 +613,7 @@ buttonpress(struct wl_listener *listener, void *data)
 			/* Drop the window off on its new monitor */
 			selmon = xytomon(cursor->x, cursor->y);
 			setmon(grabc, selmon, 0);
+			grabc = NULL;
 			return;
 		} else {
 			cursor_mode = CurNormal;
@@ -1255,10 +1256,15 @@ focusclient(Client *c, int lift)
 		/* Don't deactivate old client if the new one wants focus, as this causes issues with winecfg
 		 * and probably other clients */
 		} else if (old_c && !client_is_unmanaged(old_c) && (!c || !client_wants_focus(c))) {
-			for (i = 0; i < 4; i++)
-				wlr_scene_rect_set_color(old_c->border[i], bordercolor);
+			if (old_c->isfloating) {
+				for (i = 0; i < 4; i++)
+					wlr_scene_rect_set_color(old_c->border[i], floatcolor);
+			} else {
+				for (i = 0; i < 4; i++)
+					wlr_scene_rect_set_color(old_c->border[i], bordercolor);
+			}
 
-			client_activate_surface(old, 0);
+				client_activate_surface(old, 0);
 		}
 	}
 	printstatus();
@@ -2036,6 +2042,12 @@ setfloating(Client *c, int floating)
 {
 	c->isfloating = floating;
 	wlr_scene_node_reparent(&c->scene->node, layers[c->isfloating ? LyrFloat : LyrTile]);
+	if (!grabc)
+		if (floating)
+			for (int i = 0; i < 4; i++) {
+				wlr_scene_rect_set_color(c->border[i], floatcolor);
+				wlr_scene_node_lower_to_bottom(&c->border[i]->node);
+			}
 	arrange(c->mon);
 	printstatus();
 }

From 71e9926404962d367843d72e9a1aa70f1eaa1fe0 Mon Sep 17 00:00:00 2001
From: 0scar <qgt268@alumni.ku.dk>
Date: Fri, 17 Mar 2023 13:26:11 +0100
Subject: [PATCH 1/3] Patch: Mouse follows focus

---
 config.def.h |  1 +
 dwl.c        | 12 ++++++++++++
 2 files changed, 13 insertions(+)

diff --git a/config.def.h b/config.def.h
index c6a495048..1b66fac68 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,5 +1,6 @@
 /* appearance */
 static const int sloppyfocus               = 1;  /* focus follows mouse */
+static const int mousefollowsfocus         = 1;  /* mouse follows focus */
 static const int bypass_surface_visibility = 0;  /* 1 means idle inhibitors will disable idle tracking even if it's surface isn't visible  */
 static const unsigned int borderpx         = 1;  /* border pixel of windows */
 static const float bordercolor[]           = {0.5, 0.5, 0.5, 1.0};
diff --git a/dwl.c b/dwl.c
index 918852e14..ede4f3f0f 100644
--- a/dwl.c
+++ b/dwl.c
@@ -314,6 +314,7 @@ static void updatetitle(struct wl_listener *listener, void *data);
 static void urgent(struct wl_listener *listener, void *data);
 static void view(const Arg *arg);
 static void virtualkeyboard(struct wl_listener *listener, void *data);
+static void warpcursortoclient(Client *c);
 static Monitor *xytomon(double x, double y);
 static struct wlr_scene_node *xytonode(double x, double y, struct wlr_surface **psurface,
 		Client **pc, LayerSurface **pl, double *nx, double *ny);
@@ -1274,6 +1275,8 @@ focusclient(Client *c, int lift)
 
 	/* Activate the new client */
 	client_activate_surface(client_surface(c), 1);
+
+	if (mousefollowsfocus) warpcursortoclient(c);
 }
 
 void
@@ -2623,6 +2626,15 @@ virtualkeyboard(struct wl_listener *listener, void *data)
 	createkeyboard(&keyboard->keyboard);
 }
 
+void
+warpcursortoclient(Client *c) {
+	struct wlr_box mg = c->mon->m;
+	struct wlr_box cg = c->geom;
+	wlr_cursor_warp_absolute(cursor, NULL,
+		((double)cg.x + (double)cg.width / 2.0) / (double)mg.width,
+		((double)cg.y + (double)cg.height / 2.0) / (double)mg.height);
+}
+
 Monitor *
 xytomon(double x, double y)
 {

From fa0a35c0c7553b64b268670242fd89a64db17642 Mon Sep 17 00:00:00 2001
From: 0scar <qgt268@alumni.ku.dk>
Date: Sat, 18 Mar 2023 19:13:29 +0100
Subject: [PATCH 2/3] Check if client is visible

Also add motion notify.
---
 dwl.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/dwl.c b/dwl.c
index ede4f3f0f..d4201f8b1 100644
--- a/dwl.c
+++ b/dwl.c
@@ -2630,9 +2630,11 @@ void
 warpcursortoclient(Client *c) {
 	struct wlr_box mg = c->mon->m;
 	struct wlr_box cg = c->geom;
+	if (!VISIBLEON(c, selmon)) return;
 	wlr_cursor_warp_absolute(cursor, NULL,
 		((double)cg.x + (double)cg.width / 2.0) / (double)mg.width,
 		((double)cg.y + (double)cg.height / 2.0) / (double)mg.height);
+	motionnotify(0);
 }
 
 Monitor *

From 4c7510215b19c4ae7a727548ff174ad3bf3655ec Mon Sep 17 00:00:00 2001
From: 0scar <qgt268@alumni.ku.dk>
Date: Tue, 6 Jun 2023 15:38:31 +0200
Subject: [PATCH 3/3] Fix mouse jumping

---
 dwl.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/dwl.c b/dwl.c
index d4201f8b1..452ca6c32 100644
--- a/dwl.c
+++ b/dwl.c
@@ -486,6 +486,8 @@ arrange(Monitor *m)
 	if (m->lt[m->sellt]->arrange)
 		m->lt[m->sellt]->arrange(m);
 	motionnotify(0);
+
+	if (c && mousefollowsfocus) warpcursortoclient(c);
 	checkidleinhibitor(NULL);
 }
 
@@ -1048,7 +1050,7 @@ createpointer(struct wlr_pointer *pointer)
 
 		if (libinput_device_config_scroll_get_methods(libinput_device) != LIBINPUT_CONFIG_SCROLL_NO_SCROLL)
 			libinput_device_config_scroll_set_method (libinput_device, scroll_method);
-		
+
 		if (libinput_device_config_click_get_methods(libinput_device) != LIBINPUT_CONFIG_CLICK_METHOD_NONE)
 			libinput_device_config_click_set_method (libinput_device, click_method);
 
@@ -1275,19 +1277,22 @@ focusclient(Client *c, int lift)
 
 	/* Activate the new client */
 	client_activate_surface(client_surface(c), 1);
-
-	if (mousefollowsfocus) warpcursortoclient(c);
 }
 
 void
 focusmon(const Arg *arg)
 {
 	int i = 0, nmons = wl_list_length(&mons);
+	Client *c = NULL;
 	if (nmons)
 		do /* don't switch to disabled mons */
 			selmon = dirtomon(arg->i);
 		while (!selmon->wlr_output->enabled && i++ < nmons);
-	focusclient(focustop(selmon), 1);
+
+	c = focustop(selmon);
+	focusclient(c, 1);
+
+	if (mousefollowsfocus) warpcursortoclient(c);
 }
 
 void
@@ -1314,6 +1319,7 @@ focusstack(const Arg *arg)
 	}
 	/* If only one client is visible on selmon, then c == sel */
 	focusclient(c, 1);
+	if (mousefollowsfocus) warpcursortoclient(c);
 }
 
 /* We probably should change the name of this, it sounds like
@@ -2634,7 +2640,6 @@ warpcursortoclient(Client *c) {
 	wlr_cursor_warp_absolute(cursor, NULL,
 		((double)cg.x + (double)cg.width / 2.0) / (double)mg.width,
 		((double)cg.y + (double)cg.height / 2.0) / (double)mg.height);
-	motionnotify(0);
 }
 
 Monitor *
